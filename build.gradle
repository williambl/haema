plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.6.0'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "FabricMC"
        url = "https://maven.fabricmc.net/"
    }
    maven {
        name = "Sonatype"
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        name = "willBlRepositoryReleases"
        url = "https://maven.willbl.dev/releases"
    }
    maven {
        name = "Jamies"
        url "https://maven.jamieswhiteshirt.com/libs-release/"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
    maven {
        name = "Jared"
        url 'https://maven.blamejared.com'
        content {
            includeGroup "vazkii.patchouli"
        }
    }
    maven {
        name = "Ladysnake Libs"
        url = 'https://maven.ladysnake.org/releases'
        content {
            includeGroup "org.ladysnake"
            includeGroup "io.github.ladysnake"
            includeGroupByRegex "io\\.github\\.onyxstudios.*"
            includeGroupByRegex "dev\\.onyxstudios.*"
        }
    }
    maven {
        name = "GeckoLib"
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
        content {
            includeGroup "software.bernie.geckolib"
        }
    }
    maven {
        name = "Cotton"
        url = "https://server.bbkr.space/artifactory/libs-release/"
        content {
            includeGroup "io.github.cottonmc"
        }
    }
    maven {
        name = "Shedaniel"
        url = "https://maven.shedaniel.me"
        content {
            includeGroupByRegex "dev\\.architectury.*"
            includeGroupByRegex "me\\.shedaniel.*"
            includeGroupByRegex "me\\.sargunvohra.*"
        }
    }
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/releases/"
        content {
            includeGroup "io.github.prospector"
            includeGroup "com.terraformersmc"
            includeGroup "dev.emi"
        }
    }
    maven {
        name = "Architectury"
        url "https://maven.architectury.dev/"
        content {
            includeGroup "dev.architectury"
        }
    }
    maven {
        name = "cafeteria.dev"
        url = 'https://maven.cafeteria.dev'
        content {
            includeGroup 'net.adriantodt.fabricmc'
        }
    }
    maven {
        name = "Flemmli97"
        url "https://gitlab.com/api/v4/projects/21830712/packages/maven"
        content {
            includeGroup 'io.github.flemmli97'
        }
    }
    maven {
        name = "Gunpowder"
        url = "https://maven.martmists.com/releases"
        content {
            includeGroup 'io.github.gunpowder'
        }
    }
    maven {
        name = "Permissions"
        url = "https://maven.nucleoid.xyz"
        content {
            includeGroup 'eu.pb4'
        }
    }
    maven {
        name = "HavenKing"
        url = "https://hephaestus.dev/release"
        content {
            includeGroup 'dev.inkwell'
        }
    }
    maven {
        name = "Flemmli97"
        url = "https://gitlab.com/api/v4/projects/21830712/packages/maven"
        content {
            includeGroup 'io.github.flemmli97'
        }
    }
    maven {
        name = "Appleskin"
        url = "https://maven.ryanliptak.com/"
        content {
            includeGroup 'squeek.appleskin'
        }
    }
    maven {
        name = "CurseMaven"
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "JitPack"
        url 'https://jitpack.io'
    }

    mavenLocal()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    ///
    /// HARD DEPS
    ///

    // Fabric API
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
    }

    // Fabric Language Kotlin
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    // GeckoLib
    modImplementation("software.bernie.geckolib:geckolib-fabric-1.20.1:${project.geckolib_version}") {
        exclude group: "com.eliotlash.mclib"
        exclude group: "com.eliotlash.molang"
        exclude group: "net.fabricmc.fabric-api"
    }

    // MixinExtras (already included in Fabric Loader)
    implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${project.mixinextras_version}"))

    ///
    /// INCLUDED
    ///

    // Satin
    modImplementation include("org.ladysnake:satin:${project.satin_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // Reach Entity Attributes
    modImplementation include("com.jamieswhiteshirt:reach-entity-attributes:${project.rea_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // Patchouli
    modImplementation include("vazkii.patchouli:Patchouli:${project.patchouli_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // Cloth Config
    modImplementation include("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // CCA
    modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cc_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
    modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cc_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // LibCD
    //include "io.github.cottonmc:LibCD:${project.libcd_version}"
    //modRuntime "io.github.cottonmc:LibCD:${project.libcd_version}"

    // Fabric Permissions API
    modImplementation include("me.lucko:fabric-permissions-api:${project.fpa_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // Pehkui
    modImplementation include("com.github.Virtuoel:Pehkui:${project.pehkui_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    ///
    /// SOFT DEPS
    ///

    // REI
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}") {
        exclude group: "net.fabricmc.fabric-api"
        transitive = false
    }

    // EMI
    modCompileOnly("dev.emi:emi-fabric:${project.emi_version}") {
        exclude group: "net.fabricmc.fabric_api"
        exclude group: "null"
        transitive = false
    }

    // Origins
    modCompileOnly("com.github.apace100:origins-fabric:v${project.origins_version}") {
        exclude module: "modmenu"
        exclude group: "io.github.OnyxStudios.Cardinal-Components-API"
        exclude group: "net.fabricmc.fabric-api"
    }

    // Rat's Mischief
    // No version for 1.20.1 yet
//    modCompileOnly("io.github.ladysnake:Rats-Mischief:${project.rats_version}") {
//        exclude group: "com.eliotlash.mclib"
//        exclude group: "com.eliotlash.molang"
//        exclude group: "net.fabricmc.fabric-api"
//    }

    // Bewitchment
    modCompileOnly("curse.maven:bewitchment-394915:${project.bewitchment_version}") {
        exclude group: "net.fabricmc.fabric-api"
        transitive = false
    }

    // Flan
    modCompileOnly("io.github.flemmli97:flan:${project.flan_version}-fabric:api") {
        exclude group: "net.fabricmc.fabric-api"
        transitive = false
    }

    // Appleskin
    modCompileOnly("squeek.appleskin:appleskin-fabric:${project.appleskin_version}:api") {
        exclude group: "net.fabricmc.fabric-api"
        transitive = false
    }

    // ModMenu
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

java {
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        // Make filename unique
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "willBlRepositoryReleases"
            url = "https://maven.willbl.dev/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

compileKotlin.kotlinOptions.jvmTarget = "16"

/**
 * https://dev.to/williambl/mixins-kotlin-and-default-methods-why-they-don-t-work-together-417d
 */
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += '-Xjvm-default=all'
    }
}

curseforge {
    apiKey = project.hasProperty('curseforge_api_key') ? project.property('curseforge_api_key') : ''
    //noinspection GroovyAssignabilityCheck
    project {
        id = project.curseforge_project_id
        changelogType = 'markdown'
        changelog = file("changelog.md")

        addGameVersion project.minecraft_version
        addGameVersion "Fabric"
        addGameVersion "Quilt"

        mainArtifact(remapJar) {
            displayName = "v${project.version.toString().split("\\+")[0]} for Fabric/Quilt&MC $project.minecraft_version"
            releaseType = "release"
            relations {
                requiredDependency "fabric-api"
                requiredDependency "fabric-language-kotlin"
                requiredDependency "geckolib"
                embeddedLibrary "cardinal-components"
                embeddedLibrary "patchouli-fabric"
                embeddedLibrary "satin-api"
                optionalDependency "bewitchment"
                optionalDependency "emi"
                optionalDependency "origins"
                optionalDependency "rats-mischief"
            }
        }
    }
}

modrinth {
    token = project.hasProperty("modrinth_api_key") ? project.property("modrinth_api_key") : ""
    projectId = project.modrinth_project_id
    versionNumber = project.version
    changelog = file("changelog.md").text
    versionType = "release"
    uploadFile = remapJar
    gameVersions = [project.minecraft_version]
    loaders = ["fabric", "quilt"]
    dependencies {
        // The scope can be `required`, `optional`, `incompatible`, or `embedded`
        // The type can either be `project` or `version`
        required.project "fabric-api"
        required.project "fabric-language-kotlin"
        required.project "geckolib"
        embedded.project "cardinal-components-api"
        embedded.project "patchouli"
        embedded.project "satin-api"
    }
}
